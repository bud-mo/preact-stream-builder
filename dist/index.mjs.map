{"version":3,"file":"index.mjs","sources":["../src/index.js"],"sourcesContent":["import { h, Component } from 'preact';\nimport { Subscription } from 'rxjs';\n\nexport const ConnectionState = {\n    active: 'active',\n    done: 'done',\n    none: 'none',\n    values: 'values',\n    waiting: 'waiting'\n};\n\nexport default class StreamBuilder extends Component {\n\n    constructor(props) {\n        this._subscription = Subscription.EMPTY;\n\n        this.state = {\n            data: props.initialData,\n            state: ConnectionState.none\n        };\n    }    \n\n    componentDidMount() {\n        this.setState(() => ({ state: ConnectionState.waiting }));\n        this._subscription = this.props.stream.subscribe({\n            next: (data) => this.setState(() => ({ data, state: ConnectionState.active })),\n            error: () => {},\n            complete: () => this.setState(() => ({ state: ConnectionState.done }))\n        });\n    }\n\n    componentWillUnmount() {\n        this._subscription.unsubscribe();\n    }\n\n    render({ builder }, snapshot) {\n        return builder(snapshot);\n    }\n\n}\n"],"names":["ConnectionState","active","done","none","values","waiting","constructor","props","_subscription","Subscription","EMPTY","state","data","initialData","componentDidMount","setState","this","stream","subscribe","next","error","complete","componentWillUnmount","unsubscribe","render","ref","snapshot","builder","Component"],"mappings":"2EAGaA,EAAkB,CAC3BC,OAAQ,SACRC,KAAM,OACNC,KAAM,OACNC,OAAQ,SACRC,QAAS,sCAKTC,WAAYC,QACHC,cAAgBC,EAAaC,WAE7BC,MAAQ,CACTC,KAAML,EAAMM,YACZF,MAAOX,EAAgBG,sGAI/BW,6CACSC,2BAAkBJ,MAAOX,EAAgBK,gBACzCG,cAAgBQ,KAAKT,MAAMU,OAAOC,UAAU,CAC7CC,cAAOP,UAASI,EAAKD,gCAAkBH,EAAMD,MAAOX,EAAgBC,WACpEmB,mBACAC,2BAAgBL,EAAKD,2BAAkBJ,MAAOX,EAAgBE,wBAItEoB,qCACSd,cAAce,2BAGvBC,gBAAOC,EAAaC,UACTC,aAAQD,OAzBoBE"}